Timer unit: 1e-09 s

Total time: 0.038246 s
File: /home/will/dissertation/minor_files/profile.py
Function: sort at line 109

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   109                                                   @profile
   110                                                   def sort(self):
   111         1       1033.0   1033.0      0.0              if self.list_length < 2:
   112                                                           return
   113         1    9398423.0    9e+06     24.6              list_max = self.list_abs_max()
   114         1       9675.0   9675.0      0.0              list_max_digits = int_digits(list_max, self.base)
   115         1        610.0    610.0      0.0              if self.ordered:
   116                                                           return
   117         1        392.0    392.0      0.0              if self.reverse_ordered:
   118                                                           self.reverse_slice()
   119                                                           return
   120         1      30468.0  30468.0      0.1              max_bits = int(int_digits(list_max, 1))
   121         1        880.0    880.0      0.0              bit_mask = ~((1 << max_bits) - 1)
   122                                           
   123         1        698.0    698.0      0.0              if max_bits % self.base == 0 and max_bits != int_digits(
   124                                                           (-sys.maxsize) - 1, 1
   125                                                       ):
   126                                                           list_max_digits += 1
   127                                           
   128         1      10994.0  10994.0      0.0              bucket_list = [[] for _ in range(self.radix)]
   129                                           
   130         5       2277.0    455.4      0.0              for i in range(list_max_digits):
   131         4       1873.0    468.2      0.0                  shift = (self.base) * i
   132     40004    4299582.0    107.5     11.2                  for num in self.list:
   133     40000    6216922.0    155.4     16.3                      masked_input = num ^ bit_mask
   134     40000    9491984.0    237.3     24.8                      curr_digit = ((masked_input >> shift)) & self.radix - 1
   135     40000    8216295.0    205.4     21.5                      bucket_list[curr_digit].append(num)
   136         8     129828.0  16228.5      0.3                  nonempty = [
   137                                                               (bdx, bucket)
   138         4       7675.0   1918.8      0.0                      for bdx, bucket in enumerate(bucket_list)
   139                                                               if bucket != []
   140                                                           ]
   141         4       3399.0    849.8      0.0                  if len(nonempty) == 1:
   142                                                               bucket_list[nonempty[0][0]] = []
   143                                                               continue
   144         4        684.0    171.0      0.0                  index = 0
   145       260      38382.0    147.6      0.1                  for bdx, bucket in enumerate(bucket_list):
   146       256      42767.0    167.1      0.1                      if len(bucket) == 0: continue
   147       200     268650.0   1343.2      0.7                      self.setslice(bucket, index)
   148       200      37069.0    185.3      0.1                      index += len(bucket)
   149       200      35420.0    177.1      0.1                      bucket_list[bdx] = []

  0.04 seconds - /home/will/dissertation/minor_files/profile.py:109 - sort
